{"ast":null,"code":"import axios from 'axios';\nimport $ from 'jquery';\nexport default {\n  data() {\n    return {\n      registerData: {\n        ncharRegisterUserName: '',\n        ncharEmail: '',\n        ncharMobileNumber: '',\n        ncharAadharNumber: ''\n      },\n      loginData: {\n        email: '',\n        otp: ''\n      },\n      isRegistered: false\n    };\n  },\n  methods: {\n    toggleForm() {\n      /* eslint-disable-next-line no-undef */\n      $('form').animate({\n        height: 'toggle',\n        opacity: 'toggle'\n      }, 'slow');\n    },\n    async requestOTP() {\n      if (this.loginData.email.trim() !== '') {\n        // Check if email is not empty\n        try {\n          // Send a request to check if the email is registered\n          const checkEmailResponse = await axios.post('http://127.0.0.1:5555/checkEmail', {\n            email: this.loginData.email\n          });\n          if (checkEmailResponse.status === 200 && checkEmailResponse.data.isRegistered) {\n            // The email is registered, proceed to generate OTP\n            const otpResponse = await axios.post('http://127.0.0.1:5555/generateOtp', {\n              email: this.loginData.email\n            });\n            if (otpResponse.status === 200) {\n              console.log('OTP Sent Successfully');\n              alert('OTP Sent Successfully');\n            } else {\n              console.error('OTP request failed:', otpResponse.data.error);\n              alert('OTP request failed. Please try again.');\n            }\n          } else {\n            console.error('Email is not registered');\n            alert('Email is not registered. Please register an account.');\n          }\n        } catch (error) {\n          console.error('Error:', error);\n          alert('An error occurred while checking email or requesting OTP. Please try again later.');\n        }\n      } else {\n        alert('Please enter an email address.');\n      }\n    },\n    async login() {\n      if (this.loginData.email.trim() !== '' && this.loginData.otp.trim() !== '') {\n        // Check if email and OTP are not empty\n        try {\n          // Send a request to your server to verify OTP\n          const response = await axios.post('http://127.0.0.1:5555/verifyOtp', {\n            email: this.loginData.email,\n            otp: this.loginData.otp\n          });\n          if (response.status === 200) {\n            console.log('OTP Verified Successfully');\n            alert('OTP Verified Successfully');\n            // You can now consider the user as logged in\n          } else {\n            console.error('OTP verification failed:', response.data.error);\n            alert('OTP verification failed. Please try again.');\n          }\n        } catch (error) {\n          console.error('Error:', error);\n          alert('An error occurred during OTP verification. Please try again later.');\n        }\n      } else {\n        alert('Please enter both email and OTP.');\n      }\n    },\n    async register() {\n      if (this.validateRegistrationData()) {\n        try {\n          const response = await axios.post('http://127.0.0.1:5555/saveRegisterUser', this.registerData);\n          if (response.status === 200) {\n            console.log('Registration Successful');\n            alert('Registration Successful');\n            this.resetRegistrationForm();\n            this.isRegistered = true;\n          } else {\n            console.error('Registration failed:', response.data.error);\n            alert('Registration failed. Please try again.');\n          }\n        } catch (error) {\n          console.error('Error:', error);\n          alert('An error occurred during registration. Please try again later.');\n        }\n      } else {\n        alert('Please fill in all fields.');\n      }\n    },\n    validateRegistrationData() {\n      return this.registerData.ncharRegisterUserName !== '' && this.registerData.ncharEmail !== '' && this.registerData.ncharMobileNumber !== '' && this.registerData.ncharAadharNumber !== '';\n    },\n    resetRegistrationForm() {\n      this.registerData.ncharRegisterUserName = '';\n      this.registerData.ncharEmail = '';\n      this.registerData.ncharMobileNumber = '';\n      this.registerData.ncharAadharNumber = '';\n    }\n  }\n};","map":{"version":3,"names":["axios","$","data","registerData","ncharRegisterUserName","ncharEmail","ncharMobileNumber","ncharAadharNumber","loginData","email","otp","isRegistered","methods","toggleForm","animate","height","opacity","requestOTP","trim","checkEmailResponse","post","status","otpResponse","console","log","alert","error","login","response","register","validateRegistrationData","resetRegistrationForm"],"sources":["C:\\Users\\Harsh\\Downloads\\NEW\\form-system-user-main\\src\\components\\LoginForm.vue"],"sourcesContent":["<template>\n  <div class=\"login-page\">\n    <div class=\"form\">\n      <form class=\"register-form\">\n        <input v-model=\"registerData.ncharRegisterUserName\" type=\"text\" placeholder=\"Name\" />\n        <input v-model=\"registerData.ncharEmail\" type=\"text\" placeholder=\"Email Address\" />\n        <input v-model=\"registerData.ncharMobileNumber\" type=\"text\" placeholder=\"Contact Number\" />\n        <input v-model=\"registerData.ncharAadharNumber\" type=\"text\" placeholder=\"Aadhar Number\" />\n        <button @click.prevent=\"register\">Create</button>\n\n        <p class=\"message\">Already registered? <a href=\"#\" @click.prevent=\"toggleForm\">Sign In</a></p>\n      </form>\n      <form class=\"login-form\">\n        <input v-model=\"loginData.email\" type=\"text\" placeholder=\"Email Address\" />\n        <button @click.prevent=\"requestOTP\">Get OTP</button> \n        \n        <input v-model=\"loginData.otp\" type=\"text\" placeholder=\"Enter OTP\" />\n        <button @click.prevent=\"login\">Login</button>\n        <p class=\"message\">Not registered? <a href=\"#\" @click.prevent=\"toggleForm\">Create an account</a></p>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport $ from 'jquery';\n\n\n\nexport default {\n  data() {\n    return {\n      registerData: {\n        ncharRegisterUserName: '',\n        ncharEmail: '',\n        ncharMobileNumber: '',\n        ncharAadharNumber: '',\n      },\n      loginData: {\n        email: '',\n        otp: '',\n      },\n      isRegistered: false,\n    };\n  },\n  methods: {\n    toggleForm() {\n      /* eslint-disable-next-line no-undef */\n      $('form').animate({ height: 'toggle', opacity: 'toggle' }, 'slow');\n    },\n    async requestOTP() {\n  if (this.loginData.email.trim() !== '') { // Check if email is not empty\n    try {\n      // Send a request to check if the email is registered\n      const checkEmailResponse = await axios.post('http://127.0.0.1:5555/checkEmail', {\n        email: this.loginData.email,\n      });\n\n      if (checkEmailResponse.status === 200 && checkEmailResponse.data.isRegistered) {\n        // The email is registered, proceed to generate OTP\n        const otpResponse = await axios.post('http://127.0.0.1:5555/generateOtp', {\n          email: this.loginData.email,\n        });\n\n        if (otpResponse.status === 200) {\n          console.log('OTP Sent Successfully');\n          alert('OTP Sent Successfully');\n        } else {\n          console.error('OTP request failed:', otpResponse.data.error);\n          alert('OTP request failed. Please try again.');\n        }\n      } else {\n        console.error('Email is not registered');\n        alert('Email is not registered. Please register an account.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('An error occurred while checking email or requesting OTP. Please try again later.');\n    }\n  } else {\n    alert('Please enter an email address.');\n  }\n},\n    async login() {\n      if (this.loginData.email.trim() !== '' && this.loginData.otp.trim() !== '') { // Check if email and OTP are not empty\n        try {\n          // Send a request to your server to verify OTP\n          const response = await axios.post('http://127.0.0.1:5555/verifyOtp', {\n            email: this.loginData.email,\n            otp: this.loginData.otp,\n          });\n\n          if (response.status === 200) {\n            console.log('OTP Verified Successfully');\n            alert('OTP Verified Successfully');\n            // You can now consider the user as logged in\n\n          } else {\n            console.error('OTP verification failed:', response.data.error);\n            alert('OTP verification failed. Please try again.');\n          }\n        } catch (error) {\n          console.error('Error:', error);\n          alert('An error occurred during OTP verification. Please try again later.');\n        }\n      } else {\n        alert('Please enter both email and OTP.');\n      }\n    },\n    async register() {\n  if (this.validateRegistrationData()) {\n    try {\n      const response = await axios.post('http://127.0.0.1:5555/saveRegisterUser', this.registerData);\n      \n      if (response.status === 200) {\n        console.log('Registration Successful');\n        alert('Registration Successful');\n        this.resetRegistrationForm();\n        this.isRegistered = true;\n      } else {\n        console.error('Registration failed:', response.data.error);\n        alert('Registration failed. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('An error occurred during registration. Please try again later.');\n    }\n  } else {\n    alert('Please fill in all fields.');\n  }\n},\n\nvalidateRegistrationData() {\n      return (\n        this.registerData.ncharRegisterUserName !== '' &&\n        this.registerData.ncharEmail !== '' &&\n        this.registerData.ncharMobileNumber !== '' &&\n        this.registerData.ncharAadharNumber !== ''\n      );\n    },\nresetRegistrationForm() {\n      this.registerData.ncharRegisterUserName = '';\n      this.registerData.ncharEmail = '';\n      this.registerData.ncharMobileNumber = '';\n      this.registerData.ncharAadharNumber = '';\n    },\n  },\n};\n</script>\n\n\n  \n  <style scoped>\n  .login-page {\n    width: 500px;\n    padding: 8% 0 0;\n    margin: auto;\n    text-align: center;\n  }\n  \n  .form {\n    position: relative;\n    z-index: 1;\n    background: #FFFFFF;\n    max-width: 360px;\n    margin: 0 auto 100px;\n    padding: 45px;\n    text-align: center;\n    box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24);\n  }\n  .login-form {\n  background-color: #fff;\n  padding: 20px;\n  border-radius: 5px;\n  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);\n  width: 80%; /* Adjust the width as needed */\n  margin: 0 auto; /* Center the LoginForm horizontally */\n}\n  .form input {\n    font-family: 'Roboto', sans-serif;\n    outline: 0;\n    background: #f2f2f2;\n    width: 100%;\n    border: 0;\n    margin: 0 0 15px;\n    padding: 15px;\n    box-sizing: border-box;\n    font-size: 14px;\n  }\n  \n  .form button {\n    font-family: 'Roboto', sans-serif;\n    text-transform: uppercase;\n    outline: 0;\n    background: #4CAF50;\n    width: 100%;\n    border: 0;\n    padding: 15px;\n    color: #FFFFFF;\n    font-size: 14px;\n    transition: all 0.3s ease;\n    cursor: pointer;\n    margin-bottom: 10px;\n  }\n  \n  .form button:hover,\n  .form button:active,\n  .form button:focus {\n    background: #43A047;\n  }\n  \n  .form .message {\n    margin: 15px 0 0;\n    color: #b3b3b3;\n    font-size: 12px;\n  }\n  \n  .form .message a {\n    color: #4CAF50;\n    text-decoration: none;\n  }\n  \n  .form .register-form {\n    display: none;\n  }\n  \n  .container {\n    position: relative;\n    z-index: 1;\n    max-width: 300px;\n    margin: 0 auto;\n  }\n  \n  .container:before,\n  .container:after {\n    content: '';\n    display: block;\n    clear: both;\n  }\n  \n  .container .info {\n    margin: 50px auto;\n    text-align: center;\n  }\n  \n  .container .info h1 {\n    margin: 0 0 15px;\n    padding: 0;\n    font-size: 36px;\n    font-weight: 300;\n    color: #1a1a1a;\n  }\n  \n  .container .info span {\n    color: #4d4d4d;\n    font-size: 12px;\n  }\n  \n  .container .info span a {\n    color: #000000;\n    text-decoration: none;\n  }\n  \n  .container .info span .fa {\n    color: #EF3B3A;\n  }\n  \n  body {\n    background: #76b852;\n    background: -webkit-linear-gradient(right, #76b852, #8DC26F);\n    background: -moz-linear-gradient(right, #76b852, #8DC26F);\n    background: -o-linear-gradient(right, #76b852, #8DC26F);\n    background: linear-gradient(to left, #76b852, #8DC26F);\n    font-family: 'Roboto', sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n  </style>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}