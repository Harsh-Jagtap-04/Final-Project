{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, withModifiers as _withModifiers, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-8dac4566\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"login-page\"\n};\nconst _hoisted_2 = {\n  class: \"form\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"login-form\"\n};\nconst _hoisted_4 = {\n  class: \"message\"\n};\nconst _hoisted_5 = {\n  key: 1,\n  class: \"register-form\"\n};\nconst _hoisted_6 = {\n  class: \"message\"\n};\nconst _hoisted_7 = {\n  class: \"message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [!$data.showRegisterForm ? (_openBlock(), _createElementBlock(\"form\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"Email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"OTP\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.enteredOtp = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.enteredOtp]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.verifyOtp && $options.verifyOtp(...args), [\"prevent\"]))\n  }, \"Verify OTP\"), _createElementVNode(\"p\", _hoisted_4, [_createTextVNode(\"Not registered? \"), _createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[3] || (_cache[3] = _withModifiers($event => $options.toggleForm(true), [\"prevent\"]))\n  }, \"Create an account\")])])) : (_openBlock(), _createElementBlock(\"form\", _hoisted_5, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.registerData.name = $event),\n    type: \"text\",\n    placeholder: \"Name\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.registerData.name]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.registerData.password = $event),\n    type: \"password\",\n    placeholder: \"Password\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.registerData.password]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.registerData.email = $event),\n    type: \"text\",\n    placeholder: \"Email Address\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.registerData.email]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.registerData.contactNumber = $event),\n    type: \"text\",\n    placeholder: \"Contact Number\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.registerData.contactNumber]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.registerData.address = $event),\n    type: \"text\",\n    placeholder: \"Address\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.registerData.address]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $data.registerData.aadharNumber = $event),\n    type: \"text\",\n    placeholder: \"Aadhar Number\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.registerData.aadharNumber]]), _createElementVNode(\"button\", {\n    onClick: _cache[10] || (_cache[10] = _withModifiers((...args) => $options.register && $options.register(...args), [\"prevent\"]))\n  }, \"Create\"), _createElementVNode(\"p\", _hoisted_6, [_createTextVNode(\"Already registered? \"), _createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[11] || (_cache[11] = _withModifiers($event => $options.toggleForm(false), [\"prevent\"]))\n  }, \"Sign In\")])])), _createElementVNode(\"p\", _hoisted_7, _toDisplayString($data.message), 1 /* TEXT */)])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","$data","showRegisterForm","_hoisted_3","type","placeholder","email","$event","enteredOtp","onClick","_cache","_withModifiers","args","$options","verifyOtp","_hoisted_4","href","toggleForm","_hoisted_5","registerData","name","password","contactNumber","address","aadharNumber","register","_hoisted_6","_hoisted_7","_toDisplayString","message"],"sources":["C:\\Users\\Anaya\\Desktop\\NEW\\form-system-user-main\\src\\components\\LoginForm.vue"],"sourcesContent":["<template>\n  <div class=\"login-page\">\n    <div class=\"form\">\n      <form v-if=\"!showRegisterForm\" class=\"login-form\">\n        <input type=\"text\" placeholder=\"Email\" v-model=\"email\" />\n        <input type=\"text\" placeholder=\"OTP\" v-model=\"enteredOtp\" />\n        <button @click.prevent=\"verifyOtp\">Verify OTP</button>\n        <p class=\"message\">Not registered? <a href=\"#\" @click.prevent=\"toggleForm(true)\">Create an account</a></p>\n      </form>\n      <form v-else class=\"register-form\">\n        <input v-model=\"registerData.name\" type=\"text\" placeholder=\"Name\" />\n        <input v-model=\"registerData.password\" type=\"password\" placeholder=\"Password\" />\n        <input v-model=\"registerData.email\" type=\"text\" placeholder=\"Email Address\" />\n        <input v-model=\"registerData.contactNumber\" type=\"text\" placeholder=\"Contact Number\" />\n        <input v-model=\"registerData.address\" type=\"text\" placeholder=\"Address\" />\n        <input v-model=\"registerData.aadharNumber\" type=\"text\" placeholder=\"Aadhar Number\" />\n        <button @click.prevent=\"register\">Create</button>\n        <p class=\"message\">Already registered? <a href=\"#\" @click.prevent=\"toggleForm(false)\">Sign In</a></p>\n      </form>\n      <p class=\"message\">{{ message }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      email: '',\n      enteredOtp: '',\n      registerData: {\n        name: '',\n        password: '',\n        email: '',\n        contactNumber: '',\n        address: '',\n        aadharNumber: '',\n      },\n      message: '',\n      showRegisterForm: false, // Added to toggle between login and registration forms\n    };\n  },\n  methods: {\n    async verifyOtp() {\n      try {\n        const response = await axios.post('http://127.0.0.1:5555/verifyOtp', { email: this.email, otp: this.enteredOtp });\n        this.message = response.data.message;\n      } catch (error) {\n        console.error(error);\n        this.message = 'Invalid OTP.';\n      }\n    },\n    register() {\n      // Implement registration logic here\n    },\n    toggleForm(isRegisterForm) {\n      this.showRegisterForm = isRegisterForm;\n      this.message = ''; // Clear any previous messages\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Your styles remain the same */\n</style>\n\n  \n  <style scoped>\n  .login-page {\n    width: 500px;\n    padding: 8% 0 0;\n    margin: auto;\n    text-align: center;\n  }\n  \n  .form {\n    position: relative;\n    z-index: 1;\n    background: #FFFFFF;\n    max-width: 360px;\n    margin: 0 auto 100px;\n    padding: 45px;\n    text-align: center;\n    box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24);\n  }\n  .login-form {\n  background-color: #fff;\n  padding: 20px;\n  border-radius: 5px;\n  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);\n  width: 80%; /* Adjust the width as needed */\n  margin: 0 auto; /* Center the LoginForm horizontally */\n}\n  .form input {\n    font-family: 'Roboto', sans-serif;\n    outline: 0;\n    background: #f2f2f2;\n    width: 100%;\n    border: 0;\n    margin: 0 0 15px;\n    padding: 15px;\n    box-sizing: border-box;\n    font-size: 14px;\n  }\n  \n  .form button {\n    font-family: 'Roboto', sans-serif;\n    text-transform: uppercase;\n    outline: 0;\n    background: #4CAF50;\n    width: 100%;\n    border: 0;\n    padding: 15px;\n    color: #FFFFFF;\n    font-size: 14px;\n    transition: all 0.3s ease;\n    cursor: pointer;\n  }\n  \n  .form button:hover,\n  .form button:active,\n  .form button:focus {\n    background: #43A047;\n  }\n  \n  .form .message {\n    margin: 15px 0 0;\n    color: #b3b3b3;\n    font-size: 12px;\n  }\n  \n  .form .message a {\n    color: #4CAF50;\n    text-decoration: none;\n  }\n  \n  .form .register-form {\n    display: none;\n  }\n  \n  .container {\n    position: relative;\n    z-index: 1;\n    max-width: 300px;\n    margin: 0 auto;\n  }\n  \n  .container:before,\n  .container:after {\n    content: '';\n    display: block;\n    clear: both;\n  }\n  \n  .container .info {\n    margin: 50px auto;\n    text-align: center;\n  }\n  \n  .container .info h1 {\n    margin: 0 0 15px;\n    padding: 0;\n    font-size: 36px;\n    font-weight: 300;\n    color: #1a1a1a;\n  }\n  \n  .container .info span {\n    color: #4d4d4d;\n    font-size: 12px;\n  }\n  \n  .container .info span a {\n    color: #000000;\n    text-decoration: none;\n  }\n  \n  .container .info span .fa {\n    color: #EF3B3A;\n  }\n  \n  body {\n    background: #76b852;\n    background: -webkit-linear-gradient(right, #76b852, #8DC26F);\n    background: -moz-linear-gradient(right, #76b852, #8DC26F);\n    background: -o-linear-gradient(right, #76b852, #8DC26F);\n    background: linear-gradient(to left, #76b852, #8DC26F);\n    font-family: 'Roboto', sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n  </style>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}