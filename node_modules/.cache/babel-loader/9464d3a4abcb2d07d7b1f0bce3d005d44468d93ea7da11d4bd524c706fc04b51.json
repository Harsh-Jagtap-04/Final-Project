{"ast":null,"code":"import RegisterNewVihirVerification from \"@/components/RegisterNewVihirVerification.vue\";\nimport EditVihirVerification from \"@/components/EditVihirVerification.vue\";\nimport ViewVihirVerification from \"@/components/ViewVihirVerification.vue\";\nimport axios from 'axios'; // ... (import other components)\n\nexport default {\n  name: 'ApplicationPage',\n  components: {\n    RegisterNewVihirVerification,\n    EditVihirVerification,\n    ViewVihirVerification\n    // ... (other components)\n  },\n\n  data() {\n    return {\n      selectedOption: null,\n      vihirVerifications: [] // Initialize an empty array to store vihir verifications\n    };\n  },\n\n  computed: {\n    selectedOptionComponent() {\n      return this.selectedOption === 'new' ? 'RegisterNewVihirVerification' : this.selectedOption === 'edit' ? 'EditVihirVerification' : this.selectedOption === 'view' ? 'ViewVihirVerification' : null;\n    }\n  },\n  methods: {\n    selectOption(option) {\n      localStorage.removeItem('editVihirVerification');\n      this.selectedOption = option;\n    },\n    reloadVerificationData() {\n      this.fetchVihirVerifications();\n    },\n    deleteVerification(verificationId) {\n      const jsonData = {\n        id: verificationId\n      };\n      axios.post('http://127.0.0.1:5555/deleteVihirVerification', jsonData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        // Handle successful deletion\n        const deletedVerificationId = response.data.id;\n        console.log(`Vihir Verification with ID ${deletedVerificationId} has been deleted.`);\n\n        // Remove the deleted vihir verification from the frontend\n        this.vihirVerifications = this.vihirVerifications.filter(verification => verification.id !== verificationId);\n        this.reloadVerificationData();\n      }).catch(error => {\n        // Handle error\n        console.error('Error deleting vihir verification:', error);\n      });\n    },\n    fetchVihirVerifications() {\n      axios.get('http://127.0.0.1:5555/GetVihirVerification').then(response => this.vihirVerifications = response.data).catch(error => console.error('Error:', error));\n    },\n    selectVerificationForEdit(verificationId) {\n      this.selectedOption = 'edit'; // Set the selectedOption to 'edit'\n      this.selectedVerificationId = verificationId; // Store the selected vihir verification ID\n      localStorage.setItem('editVihirVerification', this.selectedVerificationId);\n    },\n    viewVerification(verificationId) {\n      this.selectedOption = 'view'; // Set the selectedOption to 'view'\n      this.selectedVerificationId = verificationId; // Store the selected vihir verification ID\n    },\n\n    goBackFromChild() {\n      this.selectedOption = null;\n      this.reloadVerificationData();\n    }\n  },\n  mounted() {\n    this.fetchVihirVerifications(); // Fetch vihir verifications when the component is mounted\n  }\n};","map":{"version":3,"names":["RegisterNewVihirVerification","EditVihirVerification","ViewVihirVerification","axios","name","components","data","selectedOption","vihirVerifications","computed","selectedOptionComponent","methods","selectOption","option","localStorage","removeItem","reloadVerificationData","fetchVihirVerifications","deleteVerification","verificationId","jsonData","id","post","headers","then","response","deletedVerificationId","console","log","filter","verification","catch","error","get","selectVerificationForEdit","selectedVerificationId","setItem","viewVerification","goBackFromChild","mounted"],"sources":["C:\\Users\\Harsh\\Downloads\\NEW\\form-system-user-main\\src\\components\\ApplicationPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"application-page\">\r\n    <div v-if=\"selectedOption === null\" class=\"application-options\">\r\n      <!-- Add New Vihir Verification Button -->\r\n      <div @click=\"selectOption('new')\" class=\"btn btn-info mb-4 text-white\">\r\n        <i class=\"fa-solid fa-plus me-2\"></i>Add New Vihir Verification\r\n      </div>\r\n      \r\n      <!-- Vihir Verification Table -->\r\n      <div id=\"vihirVerificationTable mt-3\">\r\n        <table class=\"table table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Vihir ID</th>\r\n              <th>Aadhar Number</th>\r\n              <th>Description</th>\r\n              <th>Mobile Number</th>\r\n              <th>Witness 1</th>\r\n              <th>Witness 2</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"(verification, index) in vihirVerifications\" :key=\"verification.id\">\r\n              <td>{{ ++index }}</td>\r\n              <td>{{ verification.mstVihirId }}</td>\r\n              <td>{{ verification.ncharAadharNumber }}</td>\r\n              <td>{{ verification.ncharDescription }}</td>\r\n              <td>{{ verification.ncharMobileNumber }}</td>\r\n              <td>{{ verification.ncharWitness1 }}</td>\r\n              <td>{{ verification.ncharWitness2 }}</td>\r\n              <td>\r\n                <button class=\"btn btn-sm rounded btn-info me-2\" @click=\"selectVerificationForEdit(verification.id)\">\r\n                  <i class=\"fa-solid fa-pen-to-square text-white\"></i>\r\n                </button>\r\n                <button class=\"btn btn-sm rounded btn-danger\" @click=\"deleteVerification(verification.id)\">\r\n                  <i class=\"fa-solid fa-trash-can\"></i>\r\n                </button>\r\n                <button class=\"btn btn-sm rounded btn-primary\" @click=\"viewVerification(verification.id)\">\r\n                  View\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-else>\r\n      <!-- Vihir Verification Form Component -->\r\n      <component :is=\"selectedOptionComponent\" @go-back=\"goBackFromChild\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport RegisterNewVihirVerification from \"@/components/RegisterNewVihirVerification.vue\";\r\nimport EditVihirVerification from \"@/components/EditVihirVerification.vue\";\r\nimport ViewVihirVerification from \"@/components/ViewVihirVerification.vue\";\r\nimport axios from 'axios'; // ... (import other components)\r\n\r\nexport default {\r\n  name: 'ApplicationPage',\r\n  components: {\r\n    RegisterNewVihirVerification,\r\n    EditVihirVerification,\r\n    ViewVihirVerification,\r\n    // ... (other components)\r\n  },\r\n  data() {\r\n    return {\r\n      selectedOption: null,\r\n      vihirVerifications: [], // Initialize an empty array to store vihir verifications\r\n    };\r\n  },\r\n  computed: {\r\n    selectedOptionComponent() {\r\n      return this.selectedOption === 'new'\r\n        ? 'RegisterNewVihirVerification'\r\n        : this.selectedOption === 'edit'\r\n        ? 'EditVihirVerification'\r\n        : this.selectedOption === 'view'\r\n        ? 'ViewVihirVerification'\r\n        : null;\r\n    },\r\n  },\r\n  methods: {\r\n    selectOption(option) {\r\n      localStorage.removeItem('editVihirVerification');\r\n      this.selectedOption = option;\r\n    },\r\n    reloadVerificationData() {\r\n      this.fetchVihirVerifications();\r\n    },\r\n    deleteVerification(verificationId) {\r\n      const jsonData = { id: verificationId };\r\n\r\n      axios\r\n        .post('http://127.0.0.1:5555/deleteVihirVerification', jsonData, {\r\n          headers: { 'Content-Type': 'application/json' },\r\n        })\r\n        .then(response => {\r\n          // Handle successful deletion\r\n          const deletedVerificationId = response.data.id;\r\n          console.log(`Vihir Verification with ID ${deletedVerificationId} has been deleted.`);\r\n\r\n          // Remove the deleted vihir verification from the frontend\r\n          this.vihirVerifications = this.vihirVerifications.filter(\r\n            verification => verification.id !== verificationId\r\n          );\r\n          this.reloadVerificationData();\r\n        })\r\n        .catch(error => {\r\n          // Handle error\r\n          console.error('Error deleting vihir verification:', error);\r\n        });\r\n    },\r\n    fetchVihirVerifications() {\r\n      axios\r\n        .get('http://127.0.0.1:5555/GetVihirVerification')\r\n        .then(response => (this.vihirVerifications = response.data))\r\n        .catch(error => console.error('Error:', error));\r\n    },\r\n    selectVerificationForEdit(verificationId) {\r\n      this.selectedOption = 'edit'; // Set the selectedOption to 'edit'\r\n      this.selectedVerificationId = verificationId; // Store the selected vihir verification ID\r\n      localStorage.setItem('editVihirVerification', this.selectedVerificationId);\r\n    },\r\n    viewVerification(verificationId) {\r\n      this.selectedOption = 'view'; // Set the selectedOption to 'view'\r\n      this.selectedVerificationId = verificationId; // Store the selected vihir verification ID\r\n    },\r\n    goBackFromChild() {\r\n      this.selectedOption = null;\r\n      this.reloadVerificationData();\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchVihirVerifications(); // Fetch vihir verifications when the component is mounted\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.application-page {\r\n  padding: 40px;\r\n  background-color: #ffffff;\r\n  box-shadow: 0 0 2px var(--grey-color-light);\r\n}\r\n\r\n.application-options {\r\n  /* Customize your styles here */\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}