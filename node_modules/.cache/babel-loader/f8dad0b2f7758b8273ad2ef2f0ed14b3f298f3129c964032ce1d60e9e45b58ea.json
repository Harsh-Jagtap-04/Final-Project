{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, withModifiers as _withModifiers, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-8dac4566\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"login-page\"\n};\nconst _hoisted_2 = {\n  class: \"form\"\n};\nconst _hoisted_3 = {\n  class: \"register-form\"\n};\nconst _hoisted_4 = {\n  class: \"message\"\n};\nconst _hoisted_5 = {\n  class: \"login-form\"\n};\nconst _hoisted_6 = {\n  class: \"message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"form\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.registerData.ncharRegisterUserName = $event),\n    type: \"text\",\n    placeholder: \"Name\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.registerData.ncharRegisterUserName]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.registerData.ncharEmail = $event),\n    type: \"text\",\n    placeholder: \"Email Address\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.registerData.ncharEmail]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.registerData.ncharMobileNumber = $event),\n    type: \"text\",\n    placeholder: \"Contact Number\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.registerData.ncharMobileNumber]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.registerData.ncharAadharNumber = $event),\n    type: \"text\",\n    placeholder: \"Aadhar Number\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.registerData.ncharAadharNumber]]), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.register && $options.register(...args), [\"prevent\"]))\n  }, \"Create\"), _createElementVNode(\"p\", _hoisted_4, [_createTextVNode(\"Already registered? \"), _createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[5] || (_cache[5] = _withModifiers((...args) => $options.toggleForm && $options.toggleForm(...args), [\"prevent\"]))\n  }, \"Sign In\")])]), _createElementVNode(\"form\", _hoisted_5, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.loginData.email = $event),\n    type: \"text\",\n    placeholder: \"Email Address\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.loginData.email]]), _createElementVNode(\"button\", {\n    onClick: _cache[7] || (_cache[7] = _withModifiers((...args) => $options.requestOTP && $options.requestOTP(...args), [\"prevent\"]))\n  }, \"Get OTP\"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.loginData.otp = $event),\n    type: \"text\",\n    placeholder: \"Enter OTP\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.loginData.otp]]), _createElementVNode(\"button\", {\n    onClick: _cache[9] || (_cache[9] = _withModifiers((...args) => $options.login && $options.login(...args), [\"prevent\"]))\n  }, \"Login\"), _createElementVNode(\"p\", _hoisted_6, [_createTextVNode(\"Not registered? \"), _createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[10] || (_cache[10] = _withModifiers((...args) => $options.toggleForm && $options.toggleForm(...args), [\"prevent\"]))\n  }, \"Create an account\")])])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","$data","registerData","ncharRegisterUserName","$event","type","placeholder","ncharEmail","ncharMobileNumber","ncharAadharNumber","onClick","_cache","_withModifiers","args","$options","register","_hoisted_4","href","toggleForm","_hoisted_5","loginData","email","requestOTP","otp","login","_hoisted_6"],"sources":["C:\\Users\\Harsh\\Downloads\\NEW\\form-system-user-main\\src\\components\\LoginForm.vue"],"sourcesContent":["<template>\n  <div class=\"login-page\">\n    <div class=\"form\">\n      <form class=\"register-form\">\n        <input v-model=\"registerData.ncharRegisterUserName\" type=\"text\" placeholder=\"Name\" />\n        <input v-model=\"registerData.ncharEmail\" type=\"text\" placeholder=\"Email Address\" />\n        <input v-model=\"registerData.ncharMobileNumber\" type=\"text\" placeholder=\"Contact Number\" />\n        <input v-model=\"registerData.ncharAadharNumber\" type=\"text\" placeholder=\"Aadhar Number\" />\n        <button @click.prevent=\"register\">Create</button>\n\n        <p class=\"message\">Already registered? <a href=\"#\" @click.prevent=\"toggleForm\">Sign In</a></p>\n      </form>\n      <form class=\"login-form\">\n        <input v-model=\"loginData.email\" type=\"text\" placeholder=\"Email Address\" />\n        <button @click.prevent=\"requestOTP\">Get OTP</button> \n        <input v-model=\"loginData.otp\" type=\"text\" placeholder=\"Enter OTP\" />\n        <button @click.prevent=\"login\">Login</button>\n        <p class=\"message\">Not registered? <a href=\"#\" @click.prevent=\"toggleForm\">Create an account</a></p>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport $ from 'jquery';\n\n\n\nexport default {\n  data() {\n    return {\n      registerData: {\n        ncharRegisterUserName: '',\n        ncharEmail: '',\n        ncharMobileNumber: '',\n        ncharAadharNumber: '',\n      },\n      loginData: {\n        email: '',\n        otp: '',\n      },\n      isRegistered: false,\n    };\n  },\n  methods: {\n    toggleForm() {\n      /* eslint-disable-next-line no-undef */\n      $('form').animate({ height: 'toggle', opacity: 'toggle' }, 'slow');\n    },\n    async requestOTP() {\n  if (this.loginData.email.trim() !== '') { // Check if email is not empty\n    try {\n      // Send a request to check if the email is registered\n      const checkEmailResponse = await axios.post('http://127.0.0.1:5555/checkEmail', {\n        email: this.loginData.email,\n      });\n\n      if (checkEmailResponse.status === 200 && checkEmailResponse.data.isRegistered) {\n        // The email is registered, proceed to generate OTP\n        const otpResponse = await axios.post('http://127.0.0.1:5555/generateOtp', {\n          email: this.loginData.email,\n        });\n\n        if (otpResponse.status === 200) {\n          console.log('OTP Sent Successfully');\n          alert('OTP Sent Successfully');\n        } else {\n          console.error('OTP request failed:', otpResponse.data.error);\n          alert('OTP request failed. Please try again.');\n        }\n      } else {\n        console.error('Email is not registered');\n        alert('Email is not registered. Please register an account.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('An error occurred while checking email or requesting OTP. Please try again later.');\n    }\n  } else {\n    alert('Please enter an email address.');\n  }\n},\n    async login() {\n      if (this.loginData.email.trim() !== '' && this.loginData.otp.trim() !== '') { // Check if email and OTP are not empty\n        try {\n          // Send a request to your server to verify OTP\n          const response = await axios.post('http://127.0.0.1:5555/verifyOtp', {\n            email: this.loginData.email,\n            otp: this.loginData.otp,\n          });\n\n          if (response.status === 200) {\n            console.log('OTP Verified Successfully');\n            alert('OTP Verified Successfully');\n            // You can now consider the user as logged in\n\n          } else {\n            console.error('OTP verification failed:', response.data.error);\n            alert('OTP verification failed. Please try again.');\n          }\n        } catch (error) {\n          console.error('Error:', error);\n          alert('An error occurred during OTP verification. Please try again later.');\n        }\n      } else {\n        alert('Please enter both email and OTP.');\n      }\n    },\n    async register() {\n  if (this.validateRegistrationData()) {\n    try {\n      const response = await axios.post('http://127.0.0.1:5555/saveRegisterUser', this.registerData);\n      \n      if (response.status === 200) {\n        console.log('Registration Successful');\n        alert('Registration Successful');\n        this.resetRegistrationForm();\n        this.isRegistered = true;\n      } else {\n        console.error('Registration failed:', response.data.error);\n        alert('Registration failed. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('An error occurred during registration. Please try again later.');\n    }\n  } else {\n    alert('Please fill in all fields.');\n  }\n},\n\nvalidateRegistrationData() {\n      return (\n        this.registerData.ncharRegisterUserName !== '' &&\n        this.registerData.ncharEmail !== '' &&\n        this.registerData.ncharMobileNumber !== '' &&\n        this.registerData.ncharAadharNumber !== ''\n      );\n    },\nresetRegistrationForm() {\n      this.registerData.ncharRegisterUserName = '';\n      this.registerData.ncharEmail = '';\n      this.registerData.ncharMobileNumber = '';\n      this.registerData.ncharAadharNumber = '';\n    },\n  },\n};\n</script>\n\n\n  \n  <style scoped>\n  .login-page {\n    width: 500px;\n    padding: 8% 0 0;\n    margin: auto;\n    text-align: center;\n  }\n  \n  .form {\n    position: relative;\n    z-index: 1;\n    background: #FFFFFF;\n    max-width: 360px;\n    margin: 0 auto 100px;\n    padding: 45px;\n    text-align: center;\n    box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24);\n  }\n  .login-form {\n  background-color: #fff;\n  padding: 20px;\n  border-radius: 5px;\n  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);\n  width: 80%; /* Adjust the width as needed */\n  margin: 0 auto; /* Center the LoginForm horizontally */\n}\n  .form input {\n    font-family: 'Roboto', sans-serif;\n    outline: 0;\n    background: #f2f2f2;\n    width: 100%;\n    border: 0;\n    margin: 0 0 15px;\n    padding: 15px;\n    box-sizing: border-box;\n    font-size: 14px;\n  }\n  \n  .form button {\n    font-family: 'Roboto', sans-serif;\n    text-transform: uppercase;\n    outline: 0;\n    background: #4CAF50;\n    width: 100%;\n    border: 0;\n    padding: 15px;\n    color: #FFFFFF;\n    font-size: 14px;\n    transition: all 0.3s ease;\n    cursor: pointer;\n  }\n  \n  .form button:hover,\n  .form button:active,\n  .form button:focus {\n    background: #43A047;\n  }\n  \n  .form .message {\n    margin: 15px 0 0;\n    color: #b3b3b3;\n    font-size: 12px;\n  }\n  \n  .form .message a {\n    color: #4CAF50;\n    text-decoration: none;\n  }\n  \n  .form .register-form {\n    display: none;\n  }\n  \n  .container {\n    position: relative;\n    z-index: 1;\n    max-width: 300px;\n    margin: 0 auto;\n  }\n  \n  .container:before,\n  .container:after {\n    content: '';\n    display: block;\n    clear: both;\n  }\n  \n  .container .info {\n    margin: 50px auto;\n    text-align: center;\n  }\n  \n  .container .info h1 {\n    margin: 0 0 15px;\n    padding: 0;\n    font-size: 36px;\n    font-weight: 300;\n    color: #1a1a1a;\n  }\n  \n  .container .info span {\n    color: #4d4d4d;\n    font-size: 12px;\n  }\n  \n  .container .info span a {\n    color: #000000;\n    text-decoration: none;\n  }\n  \n  .container .info span .fa {\n    color: #EF3B3A;\n  }\n  \n  body {\n    background: #76b852;\n    background: -webkit-linear-gradient(right, #76b852, #8DC26F);\n    background: -moz-linear-gradient(right, #76b852, #8DC26F);\n    background: -o-linear-gradient(right, #76b852, #8DC26F);\n    background: linear-gradient(to left, #76b852, #8DC26F);\n    font-family: 'Roboto', sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n  </style>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}