{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      showAdminLogin: false,\n      email: '',\n      otp: ''\n    };\n  },\n  methods: {\n    openAdminLogin() {\n      this.showAdminLogin = true;\n    },\n    async requestOTP() {\n      if (this.email.trim() !== '') {\n        try {\n          // Send a request to check if the email is registered\n          const checkEmailResponse = await axios.post('http://127.0.0.1:5555/checkAdminEmail', {\n            email: this.email\n          });\n          if (checkEmailResponse.status === 200 && checkEmailResponse.data.isRegistered) {\n            // The email is registered, proceed to generate OTP\n            console.log(checkEmailResponse.data);\n            const otpResponse = await axios.post('http://127.0.0.1:5555/generateOtp', {\n              email: this.email\n            });\n            if (otpResponse.status === 200) {\n              console.log('OTP Sent Successfully');\n              alert('OTP Sent Successfully');\n            } else {\n              console.error('OTP request failed:', otpResponse.data.error);\n              alert('OTP request failed. Please try again.');\n            }\n          } else {\n            console.error('Email is not registered');\n            alert('Email is not registered. Please register an account.');\n          }\n        } catch (error) {\n          console.error('Error:', error);\n          alert('An error occurred while checking email or requesting OTP. Please try again later.');\n        }\n      } else {\n        alert('Please enter an email address.');\n      }\n    },\n    async verifyOTP() {\n      if (this.email.trim() !== '' && this.otp.trim() !== '') {\n        try {\n          // Send a request to your server to verify OTP\n          const response = await axios.post('http://127.0.0.1:5555/verifyOtp', {\n            email: this.email,\n            otp: this.otp\n          });\n          if (response.status === 200) {\n            console.log('OTP Verified Successfully');\n            alert('OTP Verified Successfully');\n            // You can now consider the user as log\n            this.$router.push('/admin');\n          } else {\n            //console.error('OTP verification failed:', response.data.error);\n            alert('OTP verification failed. Please try again.');\n          }\n        } catch (error) {\n          console.error('Error:', error);\n          alert('An error occurred during OTP verification. Please try again later.');\n        }\n      } else {\n        alert('Please enter both email and OTP.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","showAdminLogin","email","otp","methods","openAdminLogin","requestOTP","trim","checkEmailResponse","post","status","isRegistered","console","log","otpResponse","alert","error","verifyOTP","response","$router","push"],"sources":["C:\\Users\\Harsh\\Downloads\\NEW\\form-system-user-main\\src\\components\\AdminLogin.vue"],"sourcesContent":["<template>\r\n  <div class=\"admin-login-modal\">\r\n    <div class=\"admin-login-content\">\r\n      <h2>Admin Login</h2>\r\n      <input type=\"text\" v-model=\"email\" placeholder=\"Email Address\" />\r\n      <button @click=\"requestOTP\">Get OTP</button>\r\n      <input type=\"text\" v-model=\"otp\" placeholder=\"Enter OTP\" />\r\n      <button @click=\"verifyOTP\">Login</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      showAdminLogin: false,\r\n      email: '',\r\n      otp: '',\r\n    };\r\n  },\r\n  methods: {\r\n    openAdminLogin() {\r\n      this.showAdminLogin = true;\r\n    },\r\n\r\n    async requestOTP() {\r\n      if (this.email.trim() !== '') {\r\n        try {\r\n          // Send a request to check if the email is registered\r\n          const checkEmailResponse = await axios.post('http://127.0.0.1:5555/checkAdminEmail', {\r\n            email: this.email,\r\n          });\r\n\r\n          if (checkEmailResponse.status === 200 && checkEmailResponse.data.isRegistered) {\r\n            // The email is registered, proceed to generate OTP\r\n            console.log(checkEmailResponse.data)\r\n            const otpResponse = await axios.post('http://127.0.0.1:5555/generateOtp', {\r\n              email: this.email,\r\n            });\r\n\r\n            if (otpResponse.status === 200) {\r\n              console.log('OTP Sent Successfully');\r\n              alert('OTP Sent Successfully');\r\n             \r\n\r\n            } else {\r\n              console.error('OTP request failed:', otpResponse.data.error);\r\n              alert('OTP request failed. Please try again.');\r\n            }\r\n          } else {\r\n            console.error('Email is not registered');\r\n            alert('Email is not registered. Please register an account.');\r\n          }\r\n        } catch (error) {\r\n          console.error('Error:', error);\r\n          alert('An error occurred while checking email or requesting OTP. Please try again later.');\r\n        }\r\n      } else {\r\n        alert('Please enter an email address.');\r\n      }\r\n    },\r\n    async verifyOTP() {\r\n      if (this.email.trim() !== '' && this.otp.trim() !== '') {\r\n        try {\r\n          // Send a request to your server to verify OTP\r\n          const response = await axios.post('http://127.0.0.1:5555/verifyOtp', {\r\n            email: this.email,\r\n            otp: this.otp,\r\n          });\r\n\r\n          if (response.status === 200) {\r\n            console.log('OTP Verified Successfully');\r\n            alert('OTP Verified Successfully');\r\n            // You can now consider the user as log\r\n            this.$router.push('/admin');\r\n\r\n          } else {\r\n            //console.error('OTP verification failed:', response.data.error);\r\n            alert('OTP verification failed. Please try again.');\r\n          }\r\n        } catch (error) {\r\n          console.error('Error:', error);\r\n          alert('An error occurred during OTP verification. Please try again later.');\r\n        }\r\n      } else {\r\n        alert('Please enter both email and OTP.');\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.admin-login-modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 999; /* Ensure it's above other content */\r\n}\r\n\r\n.admin-login-content {\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);\r\n  text-align: center;\r\n  max-width: 400px;\r\n  width: 80%;\r\n}\r\n\r\n.admin-login-content h2 {\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n  color: #333;\r\n}\r\n\r\n.admin-login-content input[type=\"text\"],\r\n.admin-login-content input[type=\"password\"] {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin: 10px 0;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n\r\n.admin-login-content button {\r\n  background-color: #007bff;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n}\r\n\r\n.admin-login-content button:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.admin-login-content button:last-child {\r\n  background-color: #ccc;\r\n  color: #333;\r\n  margin-left: 10px;\r\n}\r\n\r\n.admin-login-content button:last-child:hover {\r\n  background-color: #999;\r\n}\r\n\r\n</style>\r\n"],"mappings":";AAaA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE,KAAK;MACrBC,KAAK,EAAE,EAAE;MACTC,GAAG,EAAE;IACP,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,cAAcA,CAAA,EAAG;MACf,IAAI,CAACJ,cAAa,GAAI,IAAI;IAC5B,CAAC;IAED,MAAMK,UAAUA,CAAA,EAAG;MACjB,IAAI,IAAI,CAACJ,KAAK,CAACK,IAAI,CAAC,MAAM,EAAE,EAAE;QAC5B,IAAI;UACF;UACA,MAAMC,kBAAiB,GAAI,MAAMT,KAAK,CAACU,IAAI,CAAC,uCAAuC,EAAE;YACnFP,KAAK,EAAE,IAAI,CAACA;UACd,CAAC,CAAC;UAEF,IAAIM,kBAAkB,CAACE,MAAK,KAAM,GAAE,IAAKF,kBAAkB,CAACR,IAAI,CAACW,YAAY,EAAE;YAC7E;YACAC,OAAO,CAACC,GAAG,CAACL,kBAAkB,CAACR,IAAI;YACnC,MAAMc,WAAU,GAAI,MAAMf,KAAK,CAACU,IAAI,CAAC,mCAAmC,EAAE;cACxEP,KAAK,EAAE,IAAI,CAACA;YACd,CAAC,CAAC;YAEF,IAAIY,WAAW,CAACJ,MAAK,KAAM,GAAG,EAAE;cAC9BE,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;cACpCE,KAAK,CAAC,uBAAuB,CAAC;YAGhC,OAAO;cACLH,OAAO,CAACI,KAAK,CAAC,qBAAqB,EAAEF,WAAW,CAACd,IAAI,CAACgB,KAAK,CAAC;cAC5DD,KAAK,CAAC,uCAAuC,CAAC;YAChD;UACF,OAAO;YACLH,OAAO,CAACI,KAAK,CAAC,yBAAyB,CAAC;YACxCD,KAAK,CAAC,sDAAsD,CAAC;UAC/D;QACF,EAAE,OAAOC,KAAK,EAAE;UACdJ,OAAO,CAACI,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;UAC9BD,KAAK,CAAC,mFAAmF,CAAC;QAC5F;MACF,OAAO;QACLA,KAAK,CAAC,gCAAgC,CAAC;MACzC;IACF,CAAC;IACD,MAAME,SAASA,CAAA,EAAG;MAChB,IAAI,IAAI,CAACf,KAAK,CAACK,IAAI,CAAC,MAAM,EAAC,IAAK,IAAI,CAACJ,GAAG,CAACI,IAAI,CAAC,MAAM,EAAE,EAAE;QACtD,IAAI;UACF;UACA,MAAMW,QAAO,GAAI,MAAMnB,KAAK,CAACU,IAAI,CAAC,iCAAiC,EAAE;YACnEP,KAAK,EAAE,IAAI,CAACA,KAAK;YACjBC,GAAG,EAAE,IAAI,CAACA;UACZ,CAAC,CAAC;UAEF,IAAIe,QAAQ,CAACR,MAAK,KAAM,GAAG,EAAE;YAC3BE,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;YACxCE,KAAK,CAAC,2BAA2B,CAAC;YAClC;YACA,IAAI,CAACI,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;UAE7B,OAAO;YACL;YACAL,KAAK,CAAC,4CAA4C,CAAC;UACrD;QACF,EAAE,OAAOC,KAAK,EAAE;UACdJ,OAAO,CAACI,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;UAC9BD,KAAK,CAAC,oEAAoE,CAAC;QAC7E;MACF,OAAO;QACLA,KAAK,CAAC,kCAAkC,CAAC;MAC3C;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}