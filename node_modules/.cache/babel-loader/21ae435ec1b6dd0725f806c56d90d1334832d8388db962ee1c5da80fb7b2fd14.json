{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      email: '',\n      enteredOtp: '',\n      registerData: {\n        name: '',\n        password: '',\n        email: '',\n        contactNumber: '',\n        address: '',\n        aadharNumber: ''\n      },\n      message: '',\n      showRegisterForm: false // Added to toggle between login and registration forms\n    };\n  },\n\n  methods: {\n    async verifyOtp() {\n      try {\n        const response = await axios.post('http://127.0.0.1:5555/verifyOtp', {\n          email: this.email,\n          otp: this.enteredOtp\n        });\n        this.message = response.data.message;\n      } catch (error) {\n        console.error(error);\n        this.message = 'Invalid OTP.';\n      }\n    },\n    toggleForm(isRegisterForm) {\n      this.showRegisterForm = isRegisterForm;\n      this.message = ''; // Clear any previous messages\n    },\n\n    register() {\n      if (this.validateRegistrationData()) {\n        console.log('Registration data:', this.registerData);\n        alert('Registration Successful');\n        this.resetRegistrationForm();\n        this.isRegistered = true;\n      } else {\n        alert('Please fill in all fields.');\n      }\n    },\n    validateRegistrationData() {\n      return this.registerData.name !== '' && this.registerData.password !== '' && this.registerData.email !== '' && this.registerData.contactNumber !== '' && this.registerData.address !== '' && this.registerData.aadharNumber !== '';\n    },\n    resetRegistrationForm() {\n      this.registerData.name = '';\n      this.registerData.password = '';\n      this.registerData.email = '';\n      this.registerData.contactNumber = '';\n      this.registerData.address = '';\n      this.registerData.aadharNumber = '';\n    }\n  }\n};","map":{"version":3,"names":["axios","data","email","enteredOtp","registerData","name","password","contactNumber","address","aadharNumber","message","showRegisterForm","methods","verifyOtp","response","post","otp","error","console","toggleForm","isRegisterForm","register","validateRegistrationData","log","alert","resetRegistrationForm","isRegistered"],"sources":["C:\\Users\\Harsh\\Downloads\\NEW\\form-system-user-main\\src\\components\\LoginForm.vue"],"sourcesContent":["<template>\n  <div class=\"login-page\">\n    <div class=\"form\">\n      <form v-if=\"!showRegisterForm\" class=\"login-form\">\n        <input type=\"text\" placeholder=\"Email\" v-model=\"email\" />\n        <input type=\"text\" placeholder=\"OTP\" v-model=\"enteredOtp\" />\n        <button @click.prevent=\"verifyOtp\">Verify OTP</button>\n        <p class=\"message\">Not registered? <a href=\"#\" @click.prevent=\"toggleForm(true)\">Create an account</a></p>\n      </form>\n      <form v-else class=\"register-form\">\n        <input v-model=\"registerData.name\" type=\"text\" placeholder=\"Name\" />\n        <input v-model=\"registerData.password\" type=\"password\" placeholder=\"Password\" />\n        <input v-model=\"registerData.email\" type=\"text\" placeholder=\"Email Address\" />\n        <input v-model=\"registerData.contactNumber\" type=\"text\" placeholder=\"Contact Number\" />\n        <input v-model=\"registerData.address\" type=\"text\" placeholder=\"Address\" />\n        <input v-model=\"registerData.aadharNumber\" type=\"text\" placeholder=\"Aadhar Number\" />\n        <button @click.prevent=\"register\">Create</button>\n        <p class=\"message\">Already registered? <a href=\"#\" @click.prevent=\"toggleForm(false)\">Sign In</a></p>\n      </form>\n      <p class=\"message\">{{ message }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      email: '',\n      enteredOtp: '',\n      registerData: {\n        name: '',\n        password: '',\n        email: '',\n        contactNumber: '',\n        address: '',\n        aadharNumber: '',\n      },\n      message: '',\n      showRegisterForm: false, // Added to toggle between login and registration forms\n    };\n  },\n  methods: {\n    async verifyOtp() {\n      try {\n        const response = await axios.post('http://127.0.0.1:5555/verifyOtp', { email: this.email, otp: this.enteredOtp });\n        this.message = response.data.message;\n      } catch (error) {\n        console.error(error);\n        this.message = 'Invalid OTP.';\n      }\n    },\n    toggleForm(isRegisterForm) {\n      this.showRegisterForm = isRegisterForm;\n      this.message = ''; // Clear any previous messages\n    },\n    register() {\n      if (this.validateRegistrationData()) {\n        console.log('Registration data:', this.registerData);\n        alert('Registration Successful'); \n        this.resetRegistrationForm();\n        this.isRegistered = true;\n      } else {\n        alert('Please fill in all fields.');\n      }\n    },\n    validateRegistrationData() {\n      return (\n        this.registerData.name !== '' &&\n        this.registerData.password !== '' &&\n        this.registerData.email !== '' &&\n        this.registerData.contactNumber !== '' &&\n        this.registerData.address !== '' &&\n        this.registerData.aadharNumber !== ''\n      );\n    },\n    resetRegistrationForm() {\n      this.registerData.name = '';\n      this.registerData.password = '';\n      this.registerData.email = '';\n      this.registerData.contactNumber = '';\n      this.registerData.address = '';\n      this.registerData.aadharNumber = '';\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Your styles remain the same */\n</style>\n\n  \n  <style scoped>\n  .login-page {\n    width: 500px;\n    padding: 8% 0 0;\n    margin: auto;\n    text-align: center;\n  }\n  \n  .form {\n    position: relative;\n    z-index: 1;\n    background: #FFFFFF;\n    max-width: 360px;\n    margin: 0 auto 100px;\n    padding: 45px;\n    text-align: center;\n    box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24);\n  }\n  .login-form {\n  background-color: #fff;\n  padding: 20px;\n  border-radius: 5px;\n  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);\n  width: 80%; /* Adjust the width as needed */\n  margin: 0 auto; /* Center the LoginForm horizontally */\n}\n  .form input {\n    font-family: 'Roboto', sans-serif;\n    outline: 0;\n    background: #f2f2f2;\n    width: 100%;\n    border: 0;\n    margin: 0 0 15px;\n    padding: 15px;\n    box-sizing: border-box;\n    font-size: 14px;\n  }\n  \n  .form button {\n    font-family: 'Roboto', sans-serif;\n    text-transform: uppercase;\n    outline: 0;\n    background: #4CAF50;\n    width: 100%;\n    border: 0;\n    padding: 15px;\n    color: #FFFFFF;\n    font-size: 14px;\n    transition: all 0.3s ease;\n    cursor: pointer;\n  }\n  \n  .form button:hover,\n  .form button:active,\n  .form button:focus {\n    background: #43A047;\n  }\n  \n  .form .message {\n    margin: 15px 0 0;\n    color: #b3b3b3;\n    font-size: 12px;\n  }\n  \n  .form .message a {\n    color: #4CAF50;\n    text-decoration: none;\n  }\n  \n  .form .register-form {\n    display: none;\n  }\n  \n  .container {\n    position: relative;\n    z-index: 1;\n    max-width: 300px;\n    margin: 0 auto;\n  }\n  \n  .container:before,\n  .container:after {\n    content: '';\n    display: block;\n    clear: both;\n  }\n  \n  .container .info {\n    margin: 50px auto;\n    text-align: center;\n  }\n  \n  .container .info h1 {\n    margin: 0 0 15px;\n    padding: 0;\n    font-size: 36px;\n    font-weight: 300;\n    color: #1a1a1a;\n  }\n  \n  .container .info span {\n    color: #4d4d4d;\n    font-size: 12px;\n  }\n  \n  .container .info span a {\n    color: #000000;\n    text-decoration: none;\n  }\n  \n  .container .info span .fa {\n    color: #EF3B3A;\n  }\n  \n  body {\n    background: #76b852;\n    background: -webkit-linear-gradient(right, #76b852, #8DC26F);\n    background: -moz-linear-gradient(right, #76b852, #8DC26F);\n    background: -o-linear-gradient(right, #76b852, #8DC26F);\n    background: linear-gradient(to left, #76b852, #8DC26F);\n    font-family: 'Roboto', sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n  </style>\n  "],"mappings":"AAyBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,UAAU,EAAE,EAAE;MACdC,YAAY,EAAE;QACZC,IAAI,EAAE,EAAE;QACRC,QAAQ,EAAE,EAAE;QACZJ,KAAK,EAAE,EAAE;QACTK,aAAa,EAAE,EAAE;QACjBC,OAAO,EAAE,EAAE;QACXC,YAAY,EAAE;MAChB,CAAC;MACDC,OAAO,EAAE,EAAE;MACXC,gBAAgB,EAAE,KAAK,CAAE;IAC3B,CAAC;EACH,CAAC;;EACDC,OAAO,EAAE;IACP,MAAMC,SAASA,CAAA,EAAG;MAChB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMd,KAAK,CAACe,IAAI,CAAC,iCAAiC,EAAE;UAAEb,KAAK,EAAE,IAAI,CAACA,KAAK;UAAEc,GAAG,EAAE,IAAI,CAACb;QAAW,CAAC,CAAC;QACjH,IAAI,CAACO,OAAM,GAAII,QAAQ,CAACb,IAAI,CAACS,OAAO;MACtC,EAAE,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpB,IAAI,CAACP,OAAM,GAAI,cAAc;MAC/B;IACF,CAAC;IACDS,UAAUA,CAACC,cAAc,EAAE;MACzB,IAAI,CAACT,gBAAe,GAAIS,cAAc;MACtC,IAAI,CAACV,OAAM,GAAI,EAAE,EAAE;IACrB,CAAC;;IACDW,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAACC,wBAAwB,CAAC,CAAC,EAAE;QACnCJ,OAAO,CAACK,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAACnB,YAAY,CAAC;QACpDoB,KAAK,CAAC,yBAAyB,CAAC;QAChC,IAAI,CAACC,qBAAqB,CAAC,CAAC;QAC5B,IAAI,CAACC,YAAW,GAAI,IAAI;MAC1B,OAAO;QACLF,KAAK,CAAC,4BAA4B,CAAC;MACrC;IACF,CAAC;IACDF,wBAAwBA,CAAA,EAAG;MACzB,OACE,IAAI,CAAClB,YAAY,CAACC,IAAG,KAAM,EAAC,IAC5B,IAAI,CAACD,YAAY,CAACE,QAAO,KAAM,EAAC,IAChC,IAAI,CAACF,YAAY,CAACF,KAAI,KAAM,EAAC,IAC7B,IAAI,CAACE,YAAY,CAACG,aAAY,KAAM,EAAC,IACrC,IAAI,CAACH,YAAY,CAACI,OAAM,KAAM,EAAC,IAC/B,IAAI,CAACJ,YAAY,CAACK,YAAW,KAAM,EAAC;IAExC,CAAC;IACDgB,qBAAqBA,CAAA,EAAG;MACtB,IAAI,CAACrB,YAAY,CAACC,IAAG,GAAI,EAAE;MAC3B,IAAI,CAACD,YAAY,CAACE,QAAO,GAAI,EAAE;MAC/B,IAAI,CAACF,YAAY,CAACF,KAAI,GAAI,EAAE;MAC5B,IAAI,CAACE,YAAY,CAACG,aAAY,GAAI,EAAE;MACpC,IAAI,CAACH,YAAY,CAACI,OAAM,GAAI,EAAE;MAC9B,IAAI,CAACJ,YAAY,CAACK,YAAW,GAAI,EAAE;IACrC;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}